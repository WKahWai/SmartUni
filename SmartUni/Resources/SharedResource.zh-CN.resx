<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="- No data available -" xml:space="preserve">
    <value>- 无数据可显示 -</value>
  </data>
  <data name="-No data available-" xml:space="preserve">
    <value>- 无数据可显示 -</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Add new class" xml:space="preserve">
    <value>新增班级</value>
  </data>
  <data name="Add new exam" xml:space="preserve">
    <value>新增考试</value>
  </data>
  <data name="Add new student" xml:space="preserve">
    <value>新增学生</value>
  </data>
  <data name="Add new subject" xml:space="preserve">
    <value>新增科目</value>
  </data>
  <data name="Add new tutor" xml:space="preserve">
    <value>新增教师</value>
  </data>
  <data name="Add Students" xml:space="preserve">
    <value>新增学生</value>
  </data>
  <data name="Are you sure you want to delete this ?" xml:space="preserve">
    <value>你确定要删除此资料吗？</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>回到列表</value>
  </data>
  <data name="Choose from the left panel to start" xml:space="preserve">
    <value>从左侧面板中选择以开始</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>班级</value>
  </data>
  <data name="Class ID" xml:space="preserve">
    <value>班级编号</value>
  </data>
  <data name="Class Name" xml:space="preserve">
    <value>班级名字</value>
  </data>
  <data name="Classes" xml:space="preserve">
    <value>班级</value>
  </data>
  <data name="Contact No." xml:space="preserve">
    <value>联络号码</value>
  </data>
  <data name="Contact No. must be within 10-11 digits." xml:space="preserve">
    <value>联系号码必须在10-11位数之内。</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Create New" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>明细</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>电邮地址</value>
  </data>
  <data name="Exam" xml:space="preserve">
    <value>考试</value>
  </data>
  <data name="Exam Description" xml:space="preserve">
    <value>考试细节</value>
  </data>
  <data name="Examination" xml:space="preserve">
    <value>考试</value>
  </data>
  <data name="Exams" xml:space="preserve">
    <value>考试</value>
  </data>
  <data name="Go" xml:space="preserve">
    <value>走</value>
  </data>
  <data name="Grade" xml:space="preserve">
    <value>等级</value>
  </data>
  <data name="Home page" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="Invalid Email Address" xml:space="preserve">
    <value>无效的电邮地址</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>项目</value>
  </data>
  <data name="Kindly contact Kah Wai if you face any problem." xml:space="preserve">
    <value>如果您遇到任何问题，请联系Kah Wai。</value>
  </data>
  <data name="Link" xml:space="preserve">
    <value>链接</value>
  </data>
  <data name="Manage classes" xml:space="preserve">
    <value>管理班级</value>
  </data>
  <data name="Manage exams" xml:space="preserve">
    <value>管理考试</value>
  </data>
  <data name="Manage settings" xml:space="preserve">
    <value>管理设置</value>
  </data>
  <data name="Manage students" xml:space="preserve">
    <value>管理学生</value>
  </data>
  <data name="Manage subjects" xml:space="preserve">
    <value>管理科目</value>
  </data>
  <data name="Manage tutors" xml:space="preserve">
    <value>管理教师</value>
  </data>
  <data name="Mark" xml:space="preserve">
    <value>分数</value>
  </data>
  <data name="Mark must be within the range 0 and 100." xml:space="preserve">
    <value>分数必须介于0至100分。</value>
  </data>
  <data name="Mark Registration" xml:space="preserve">
    <value>分数输入</value>
  </data>
  <data name="Pick one" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="Register marks" xml:space="preserve">
    <value>分数输入</value>
  </data>
  <data name="Register students" xml:space="preserve">
    <value>学生注册</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>已选择</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设定</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>学生</value>
  </data>
  <data name="Student has registered the same subject." xml:space="preserve">
    <value>此学生已经报名了相同的科目。</value>
  </data>
  <data name="Student ID" xml:space="preserve">
    <value>学生编号</value>
  </data>
  <data name="Student Name" xml:space="preserve">
    <value>学生名字</value>
  </data>
  <data name="Student's Subject" xml:space="preserve">
    <value>学生科目</value>
  </data>
  <data name="Students" xml:space="preserve">
    <value>学生</value>
  </data>
  <data name="Study Level" xml:space="preserve">
    <value>学历等级</value>
  </data>
  <data name="Study Status" xml:space="preserve">
    <value>学生状态</value>
  </data>
  <data name="Study Status Description" xml:space="preserve">
    <value>学生状态明细</value>
  </data>
  <data name="Study Status ID" xml:space="preserve">
    <value>学生状态编号</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>科目</value>
  </data>
  <data name="Subject ID" xml:space="preserve">
    <value>科目编号</value>
  </data>
  <data name="Subject Name" xml:space="preserve">
    <value>科目名字</value>
  </data>
  <data name="Subjects" xml:space="preserve">
    <value>科目</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="Term" xml:space="preserve">
    <value>学期</value>
  </data>
  <data name="Total Student" xml:space="preserve">
    <value>总学生人数</value>
  </data>
  <data name="Tutor" xml:space="preserve">
    <value>教师</value>
  </data>
  <data name="Tutor Name" xml:space="preserve">
    <value>教师名字</value>
  </data>
  <data name="Tutor Status" xml:space="preserve">
    <value>教师状态</value>
  </data>
  <data name="Tutor Status Description" xml:space="preserve">
    <value>教师状态明细</value>
  </data>
  <data name="Tutor Status ID" xml:space="preserve">
    <value>教师状态编号</value>
  </data>
  <data name="Tutor Type" xml:space="preserve">
    <value>教师种类</value>
  </data>
  <data name="Tutor Type Description" xml:space="preserve">
    <value>教师种类明细</value>
  </data>
  <data name="Tutor Type ID" xml:space="preserve">
    <value>教师种类编号</value>
  </data>
  <data name="Tutors" xml:space="preserve">
    <value>教师</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>欢迎</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>年份</value>
  </data>
  <data name="Year must be valid integer within the range 2015 and 2025." xml:space="preserve">
    <value>年份必须是2015年和2025年范围内的有效整数。</value>
  </data>
</root>